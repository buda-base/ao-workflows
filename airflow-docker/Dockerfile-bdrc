# Dockerfile
# Build the bdrc airflow container.
# WARNING - meant to be invoked from docker compose. See
# ./bdrc-docker.sh and bdrc-docker-compose.yml

# create custom container for bdrc airflow scheduler
# +5 Github Copilot
# Use the original image as a base
FROM apache/airflow:2.8.3-python3.11

# Severely stupid warning alert - these resources must all be relative
# to the Dockerfile path! Or maybe it's security.
# These are initialized in bdrc-docker-compose.yml
ARG SYNC_SCRIPTS_HOME
ARG PY_REQS
ARG CONFIG_ROOT

# Install pip - DNA on some macos dockers
# RUN apt-get update && apt-get install -y python3-pip

# Add audit tool. As superuser
USER root
# Get https://github.com/buda-base/asset-manager/releases/download/v1.0-beta/audit-v1-beta_1.0-beta-1-2022-05-12_amd64.deb
COPY audit-v1-beta_1.0-beta-1-2022-05-12_amd64.deb .
RUN dpkg  -i audit-v1-beta_1.0-beta-1-2022-05-12_amd64.deb
RUN update-alternatives --install /usr/local/bin/audit-tool audit-tool /opt/audit-tool/audit-v1-beta/bin/audit-tool 50
#
# Will this help log permissions on debian?
# Apparently not.
# RUN chown -R airflow:0 /opt/airflow/logs
#
#  ao-workflows#18: Set up the external repository.
RUN chmod 777 /mnt
USER airflow
WORKDIR /home/airflow
# Copy specific scripts for the sync operation
RUN mkdir -p bin
# This is dynamic, so not copied from static
ADD $SYNC_SCRIPTS_HOME bin
#
# Add the requirements file PY_REQS
ADD $PY_REQS .
# RUN chown -R airflow:airflow /opt/airflow/sync-scripts
# Install sync dependencies
RUN pip3 install --user --no-cache-dir -r $PY_REQS

# Make the sync_scripts accessible.
ENV PATH="${PATH}:/home/airflow/bin"

#
# Add the config to the image
RUN mkdir -p ${CONFIG_ROOT}
ADD ${CONFIG_ROOT} ${CONFIG_ROOT}

# I really should use a volume here, to persist across runs
RUN mkdir -p  bdrc/data && chown -R airflow:0 bdrc/data && chmod 777 bdrc/data

